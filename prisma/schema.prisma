generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model user {
  id           Int           @id @default(autoincrement())
  name         String
  surname      String
  email        String        @unique
  password     String
  address      String
  phone        String
  createdAt    DateTime      @default(now())
  role         String        @default("user")
  cards        card[]
  transactions transaction[]
  cart         clothes[]     @relation("clothesTouser")
}

model clothes {
  id                 Int                  @id @default(autoincrement())
  name               String
  price              Float
  description        String
  image              String
  stock              Int
  size               String
  typeId             Int
  subTypeId          Int
  fabric             String
  subType            subType              @relation(fields: [subTypeId], references: [id])
  type               type                 @relation(fields: [typeId], references: [id])
  clothesTransaction clothesTransaction[]
  transaction        transaction[]
  user               user[]               @relation("clothesTouser")
}

model type {
  id      Int       @id @default(autoincrement())
  name    String
  clothes clothes[]
  subType subType[]
}

model subType {
  id      Int       @id @default(autoincrement())
  name    String
  typeId  Int
  clothes clothes[]
  type    type      @relation(fields: [typeId], references: [id])
}

model transaction {
  id                 Int                  @id @default(autoincrement())
  token              String               @unique
  userId             Int
  clothesId          Int
  quantity           Int
  total              Float
  createdAt          DateTime             @default(now())
  clothesTransaction clothesTransaction[]
  clothes            clothes              @relation(fields: [clothesId], references: [id])
  user               user                 @relation(fields: [userId], references: [id])
}

model card {
  id             Int      @id @default(autoincrement())
  userId         Int
  cardNumber     String
  expirationDate String
  cvv            Int
  createdAt      DateTime @default(now())
  user           user     @relation(fields: [userId], references: [id])
}

model clothesTransaction {
  id            Int         @id @default(autoincrement())
  clothesId     Int
  transactionId Int
  quantity      Int
  clothes       clothes     @relation(fields: [clothesId], references: [id])
  transaction   transaction @relation(fields: [transactionId], references: [id])
}
